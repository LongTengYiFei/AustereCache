2019.05.15
1. LBAIndex, CAIndex <- LBABucket, CABucket <- Bucket.
2. Derived classes of Bucket implement different kinds of cache eviction policy. Specifically, Bucket provide data and interfaces, while derived classes implement them and control on the data.
3. Currently only byte-level allocation is implemented, for finer-grained controll, bit-level memory allocation for Bucket is needed.
4. Google Test framework has been integrated.
2019.05.16
1. Device -> BlockDevice -> DeviceWithCache (Manage two devices)
2. Bring in MurmurHash3 to compute Fingerprint
3. Plan to modify byte-level bucket to bit-level bucket
2019.05.17
1. Modify and test byte-level bucket to bit-level bucket - Done
2. Write the skeleton of write and read of DeviceWithCache
2019.06.03
1. Update architecture graph
2. Implement read/write skeleton and ChunkModule
2019.06.04
MetadataModule::lookup should be splited for write_path and read_path
lookup and update is splited in two stages
Problem met when evicting ca_index entries because the offsets of all entries inside the same bucket change : solved, only contiguous space evicted do we insert the new entry 
